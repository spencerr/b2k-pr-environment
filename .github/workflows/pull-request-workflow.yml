name: Microservice Pull Request

on:
  workflow_call:
    inputs:
      solution-directory: 
        required: true
        type: string
      docker-file-path: 
        required: true
        type: string
      repository:
        required: true
        type: string
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Git - Checkout Branch
      uses: actions/checkout@v3
    
    - name: .NET - Setup
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: .NET - Restore Nugets
      run: dotnet restore ${{ inputs.solution-directory }}
      
    - name: .NET - Build
      run: dotnet build ${{ inputs.solution-directory }} --no-restore

    # - name: .NET - Test
    #   run: dotnet test ${{ inputs.solutionPath }} --no-build --verbosity normal

    - name: Docker - Generate Tags
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: ${{ inputs.repository }}
        flavor: latest=true
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=sha,event=push

    - name: Docker - Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ inputs.docker-file-path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    # - name: AKS - Login
    #   id: login
    #   uses: azure/login@v1.4.3
    #   with:
    #     creds: ${{ secrets.AZURE_AKS_CREDENTIALS }}

    # - name: AKS - Set AKS Context
    #   id: set-context
    #   uses: azure/aks-set-context@v3
    #   with:
    #     resource-group: '${{ secrets.AZURE_AKS_RESOURCE_GROUP }}' 
    #     cluster-name: '${{ secrets.AZURE_AKS_CLUSTER_NAME }}'

    # - name: AKS - Install Helm
    #   uses: Azure/setup-helm@v3
    #   with:
    #     version: 'latest'
    #     token: ${{ secrets.GITHUB_TOKEN }}

    # - name: AKS - Deploy Helm Chart
    #   run: >
    #     helm upgrade ${{ env.helmDeployment }} ${{ inputs.helmChartPath }}
    #     --install
    #     --force
    #     --namespace ${{ inputs.namespace }}
    #     --create-namespace
    #     --set-string image.tag='${{ env.tag }}'
    #     --set-string fullnameOverride='${{ env.helmDeployment }}'
    #     --set ingress.enabled=false

    # - name: AKS - Add Bridge To Kubernetes Routing
    #   run: |
    #     kubectl label pods \
    #     --selector="app.kubernetes.io/name=${{ inputs.serviceName }},app.kubernetes.io/instance=${{ env.helmDeployment }}" \
    #     routing.visualstudio.io/route-from=${{ inputs.serviceName }} \
    #     -n ${{ inputs.namespace }} --overwrite=true

    #     kubectl annotate pods \
    #     --selector="app.kubernetes.io/name=${{ inputs.serviceName }},app.kubernetes.io/instance=${{ env.helmDeployment }}" \
    #     routing.visualstudio.io/route-on-header=kubernetes-route-as=${{ env.isolationVersion }} \
    #     -n ${{ inputs.namespace }} --overwrite=true